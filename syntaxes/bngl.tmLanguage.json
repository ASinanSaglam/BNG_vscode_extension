{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BioNetGen Language",
	"patterns": [
		{
			"include": "#model"
		},
		{
			"include": "#actions"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"model": {
			"patterns": [{
				"name": "entity.name.tag.model.bngl",
				"begin": "begin(\\s+)model(\\s*)\n",
				"end": "end(\\s+)model(\\s*)\n",
				"patterns": [{
					"include": "#blocks"
				},
				{
					"include": "#comments"
				}]
			}]
		},
		"blocks": {
			"patterns": [{
				"name": "entity.name.tag.params.bngl",
				"begin": "begin(\\s+)parameters(\\s*)\n",
				"end": "end(\\s+)parameters(\\s*)\n",
				"patterns": [
					{
						"include": "#comments"
					},
					{
						"include": "#param_line"
					}]
			},
			{
				"name": "entity.name.tag.comps.bngl",
				"begin": "begin(\\s+)compartments(\\s*)\n",
				"end": "end(\\s+)compartments(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#compartment_line"
				}]
			},
			{
				"name": "entity.name.tag.mtypes.bngl",
				"begin": "begin(\\s+)molecule(\\s+)types(\\s*)\n",
				"end": "end(\\s+)molecule(\\s+)types(\\s*)\n",
				"patterns": [
				{
					"include": "#moltype_line"
				},
				{
					"include": "#comments"
				}]
			},
			{
				"name": "entity.name.tag.rules.bngl",
				"begin": "begin(\\s+)reaction(\\s+)rules(\\s*)\n",
				"end": "end(\\s+)reaction(\\s+)rules(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#expressions"
				},
				{
					"include": "#species_line"
				}]
			},
			{
				"name": "entity.name.tag.funcs.bngl",
				"begin": "begin(\\s+)functions(\\s*)\n",
				"end": "end(\\s+)functions(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#func_def"
				}]
			},
			{
				"name": "entity.name.tag.specs.bngl",
				"begin": "begin(\\s+)species(\\s*)\n",
				"end": "end(\\s+)species(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#species_line"
				}]
			},
			{
				"name": "entity.name.tag.specs.bngl",
				"begin": "begin(\\s+)seed(\\s+)species(\\s*)\n",
				"end": "end(\\s+)seed(\\s+)species(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#species_line"
				}]
			},
			{
				"name": "entity.name.tag.obs.bngl",
				"begin": "begin(\\s+)observables(\\s*)\n",
				"end": "end(\\s+)observables(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#obs_def"
				}]
			}
			]
		},
		"actions": {
			"patterns": [{
				"name": "entity.name.function.bngl",
				"match": "(generate_network|generate_hybrid_model|simulate|simulate_ode|simulate_ssa|simulate_pla|simulate_nf|parameter_scan|bifurcate|readFile|writeFile|writeModel|writeNetwork|writeXML|writeSBML|writeMfile|writeMexfile|writeMDL|visualize|setConcentration|addConcentration|saveConcentration|resetConcentrations|setParameter|saveParameters|resetParameters|quit|setModelName|substanceUnits|version|setOption)"
			},
			{
				"include": "#comments"
			},
		    {
				"include": "#constants"
			}]
		},
		"param_line": {
			"name": "entity.name.section.parameters.line.bngl",
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([A-Za-z][A-Za-z0-9_]*)\\s*(\\=)?\\s*",
				"beginCaptures": {
					"1": { "name": "line.label", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "name", "patterns": [{ "include": "#names" }] }
				},
				"end": "\\s*(?=\\#|\n)",
				"patterns": [{
					"name": "expression",
					"patterns": [{
						"include": "#expressions"
					}]
				}]
			}]
		},
		"moltype_line": {
			"patterns": [{
				"name": "entity.name.section.moltype.line.bngl",
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*",
				"beginCaptures": {
					"1": { "name": "line.label", "patterns": [{ "include": "#line_labels" }] }
				},
				"end": "\\s*(?=\\#|\n)",
				"patterns": [{
					"name": "moltype",
					"patterns": [{
						"include": "#moltype"
					}]
				}]
			}]
		},
		"compartment_line": {
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([A-Za-z][A-Za-z0-9_]*)\\s+([2|3])\\s+",
				"beginCaptures": {
					"1": { "name": "line.label", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "name", "patterns": [{ "include": "#names "}] },
					"3": { "name": "dimensionality" }
				},
				"end": "(\\s[A-Za-z][A-Za-z0-9_]*)?\\s*(?=\\#|\n)",
				"endCaptures": {
					"1": { "name": "parent", "patterns": [{ "include": "#names" }]}
				},
				"patterns": [{
					"include": "#expressions"
				}]
			}]
		},
		"func_def": {
			"patterns": [
				{
					"name": "entity.name.tag.funcs.name.bngl",
					"begin": "^\\s*",
					"end": "(?=\\()",
					"patterns": [{
						"include": "#names"
					}]
				},
				{
					"name": "entity.name.tag.funcs.args.bngl",
					"begin": "\\(",
					"end": "\\)",
					"patterns": [{
						"include": "#constants"
					}]
				},
				{
					"name": "entity.name.tag.funcs.defn.bngl",
					"begin": "(?=\\S)",
					"end": "(?=\n|\\#)",
					"patterns": [{
						"include": "#expressions"
					}]
				}]
			
		},
		"species_line": {
			"name": "species",
			"patterns": [
			{
				"begin": "\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([^\n|\\#|\\s]+)\\s+",
				"beginCaptures": {
					"1": { "name": "line.label", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "species.pattern", "patterns": [{ "include": "#species_pat" }] }
				},
				"end": "(?=\n|\\#)",
				"patterns": [{
					"include": "#expressions"
				}]
			},
			{
				"include": "#comments"
			}]
		},
		"obs_def": {
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*(Molecules|Species)\\s+([A-Za-z][A-Za-z0-9_]*)\\s+",
				"beginCaptures": {
					"1": { "name": "line.label", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "obs_type", "patterns": [{ "include": "#obs_kwords"}] },
					"3": { "name": "obs_name", "patterns": [{ "include": "#names"}] }
				},
				"end": "\\s*(?=\\#|\n)",
				"patterns": [{
					"begin": "([^\\#|\n]+)",
					"beginCaptures": {
						"1": { "name": "species.pattern", "patterns": [{ "include": "#species_pat" }] }
					},
					"end": "(?=\\#|\n)"
				}]
			}]
		},
		"species_pat": {
			"patterns": [{
				"match": "([^\n|\\#|\\s|\\.|\\:|\\$]+)",
				"captures": {
					"1": { "name": "molecule", "patterns": [{ "include": "#molecule_pat" }]}
				}
			},
			{
				"match": "(\\:|\\::)",
				"name": "species.overall"
			},
			{
				"match": "\\.",
				"name": "species.separator"
			},
			{
				"match": "\\$",
				"name": "species.constant"
			}]
		},
		"molecule_pat": {
			"name": "molecule",
			"patterns": [{
				"match": "([A-Za-z][A-Za-z0-9_]*)?([^\n|\\#|\\.|\\%|\\@]+)?(\\%[A-Za-z0-9][A-Za-z0-9_]*)?(\\@[A-Za-z][A-Za-z0-9_]*)?",
				"captures": {
					"1": { "name": "molecule.name" },
					"2": { "name": "molecule.components" },
					"3": { "name": "molecule.tag" },
					"4": { "name": "molecule.compartment" }
				}
			},
			{
				"match": "([A-Za-z][A-Za-z0-9_]*)?(\\%[A-Za-z0-9][A-Za-z0-9_]*)?(\\@[A-Za-z][A-Za-z0-9_]*)?([^\n|\\#|\\.|\\%|\\@]+)?",
				"captures": {
					"1": { "name": "molecule.name" },
					"2": { "name": "molecule.tag" },
					"3": { "name": "molecule.compartment" },
					"4": { "name": "molecule.components" }
				}
			}
			]
		},
		"moltype": {
			"patterns": [{
				"begin": "([A-Za-z][A-Za-z0-9_]*)\\(",
				"beginCaptures": {
					"1": { "name": "name", "patterns": [{ "include": "#names" }] }
				},
				"end": "(.*)\\)",
				"endCaptures": {
					"1": { "name": "moltype_spec", "patterns": [{ "include": "#components" }] }
				}
			}]
		},
		"components": {
			"patterns": [
			{
				"name": "keyword.control.state_name.bngl",
				"match": "(?<!\\~)[A-Za-z][A-Za-z0-9_]*(?=\\~)"
			},	
			{
				"name": "keyword.control.state.bngl",
				"match": "(?<=\\~)[A-Za-z0-9][A-Za-z0-9_]*"
			},
			{
				"name": "keyword.operator.state_sym.bngl",
				"match": "~"
			},
			{
				"name": "keyword.operator.mtype.bngl",
				"match": "\\,"
			}]
		},
		"species_spec": {
			"patterns": [{
				"name": "keyword.control.state.bngl",
				"match": "(~[A-Za-z0-9][A-Za-z0-9_]+|~\\?)"
			},
			{
				"name": "keyword.control.bond.bngl",
				"match": "(\\!\\d+|\\!\\?|\\!\\+)"
			},
			{
				"name": "keyword.control.tag.bngl",
				"match": "\\%[A-Za-z0-9][A-Za-z0-9_]+"
			},
			{
				"name": "keyword.operator.mtype.bngl",
				"match": "(,)"
			},
			{
				"include": "#constants"
			}]
		},
		"obs_kwords": {
			"patterns": [{
				"name": "entity.name.type.obs.bngl",
				"match": "(Molecules|Species)"
			}]
		},
		"line_number": {
			"patterns": [{
				"name": "constant.language.line_label.bngl",
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]+\\:)?",
				"end": "(?<=\\s*|\\:)"
			}]
		},
		"names": {
			"name": "variable.name.bngl",
			"match": "[A-Za-z][A-Za-z0-9_]*"
		},
		"line_labels": {
			"name": "constant.language.line_label.bngl",
			"match": "([A-Za-z][A-Za-z0-9_]*\\s*\\:|[0-9]+\\s+)"
		},
		"expressions": {
			"patterns": [
			{
				"include": "#constants"
			},
			{
				"include": "#functions"
			},
			{
				"include": "#names"
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.bngl",
				"begin": "\"",
				"end": "\""
			}]
		},
		"functions": {
			"patterns": [{
				"name": "keyword.control.bngl",
				"match": "\\b(abs|sin|cos|tan|exp|ln|log10|floor|ceil|sqrt|asin|acos|atan|sinh|cosh|tanh|asinh|acosh|atanh)\\b"
			}]
		},
		"constants": {
			"patterns": [
			{
				"name": "constant.numeric.floating.bngl",
				"match": "(?:\\b|\\+|\\-|\\*|\\/|\\%)\\d+(\\.\\d+)?(e\\d+)?"
			},
			{
				"name": "constant.character.bngl",
				"match": "(<|>|=|!|=>|<=)"
			},
			{
				"name": "keyword.operator.bngl",
				"match": "(\\+|\\-|\\*|\\/|\\%)"
			},
			{
				"name": "keyword.control.bngl",
				"match": "\\b(if|min|max|sum|avg)\\b"
			},
			{
				"name": "keyword.control.bngl",
				"match": "\\b(pi|eulerian|time)\\b"
			}
			]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.bngl",
				"match": "#.*"
			}]
		}
	},
	"scopeName": "source.bngl"
}