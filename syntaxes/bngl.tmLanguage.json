{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BioNetGen Language",
	"patterns": [
		{
			"include": "#model"
		},
		{
			"include": "#actions"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"model": {
			"patterns": [{
				"name": "entity.name.section.model.bngl",
				"begin": "begin(\\s+)model(\\s*)\n",
				"end": "end(\\s+)model(\\s*)\n",
				"patterns": [{
					"include": "#blocks"
				},
				{
					"include": "#comments"
				}]
			}]
		},
		"blocks": {
			"patterns": [{
				"name": "entity.name.section.parameters.bngl",
				"begin": "begin(\\s+)parameters(\\s*)\n",
				"end": "end(\\s+)parameters(\\s*)\n",
				"patterns": [
					{
						"include": "#comments"
					},
					{
						"include": "#param_line"
					}]
			},
			{
				"name": "entity.name.section.compartments.bngl",
				"begin": "begin(\\s+)compartments(\\s*)\n",
				"end": "end(\\s+)compartments(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#compartment_line"
				}]
			},
			{
				"name": "entity.name.section.moleculetypes.bngl",
				"begin": "begin(\\s+)molecule(\\s+)types(\\s*)\n",
				"end": "end(\\s+)molecule(\\s+)types(\\s*)\n",
				"patterns": [
				{
					"include": "#moltype_line"
				},
				{
					"include": "#comments"
				}]
			},
			{
				"name": "entity.name.section.rules.bngl",
				"begin": "begin(\\s+)reaction(\\s+)rules(\\s*)\n",
				"end": "end(\\s+)reaction(\\s+)rules(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#rule_line"
				}]
			},
			{
				"name": "entity.name.section.functions.bngl",
				"begin": "begin(\\s+)functions(\\s*)\n",
				"end": "end(\\s+)functions(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#func_line"
				}]
			},
			{
				"name": "entity.name.section.species.bngl",
				"begin": "begin(\\s+)species(\\s*)\n",
				"end": "end(\\s+)species(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#species_line"
				}]
			},
			{
				"name": "entity.name.section.species.bngl",
				"begin": "begin(\\s+)seed(\\s+)species(\\s*)\n",
				"end": "end(\\s+)seed(\\s+)species(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#species_line"
				}]
			},
			{
				"name": "entity.name.section.observables.bngl",
				"begin": "begin(\\s+)observables(\\s*)\n",
				"end": "end(\\s+)observables(\\s*)\n",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#obs_def"
				}]
			}
			]
		},
		"actions": {
			"patterns": [{
				"name": "entity.name.function.action.bngl",
				"match": "^\\s*(generate_network|generate_hybrid_model|simulate|simulate_ode|simulate_ssa|simulate_pla|simulate_nf|parameter_scan|bifurcate|readFile|writeFile|writeModel|writeNetwork|writeXML|writeSBML|writeMfile|writeMexfile|writeMDL|visualize|setConcentration|addConcentration|saveConcentrations|resetConcentrations|setParameter|saveParameters|resetParameters|quit|setModelName|substanceUnits|version|setOption)\\((\\{)?([^\n|\\#]+)?(\\})?\\)",
			    "captures": {
					"1": { "name": "meta.action.name.bngl", "patterns": [{ "include": "#names"}] },
					"3": { "name": "meta.action.arguments.bngl", "patterns": [{ "include": "#action_arguments"}] }
				}
			},
			{
				"include": "#comments"
			}]
		},
		"action_arguments": {
			"patterns": [{
				"match": "([^\n|\\#|\\=|\\>|\\,]+)(\\=\\>)([^\n|\\#|\\=|\\>|\\,]+)",
				"captures": {
					"1": { "name": "storage.type.action_argument.argument_name.bngl" },
					"2": { "name": "keyword.control.action_argument.assign.bngl" },
					"3": { "name": "variable.parameter.action_argument.argument_value.bngl" }
				}
			},
			{
				"match": "\\,",
				"name": "keyword.control.action_argument.sep.bngl"
			}]
		},
		"param_line": {
			"name": "meta.parameter.line.bngl",
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([A-Za-z][A-Za-z0-9_]*)\\s*(\\=)?\\s*",
				"beginCaptures": {
					"1": { "name": "meta.parameter.linelabel.bngl", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "name", "patterns": [{ "include": "#names" }] }
				},
				"end": "\\s*(?=\\#|\n)",
				"patterns": [{
					"name": "meta.parameter.expression.bngl",
					"patterns": [{
						"include": "#expressions"
					}]
				}]
			}]
		},
		"moltype_line": {
			"patterns": [{
				"name": "meta.moleculetype.line.bngl",
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*",
				"beginCaptures": {
					"1": { "name": "meta.moleculetype.linelabel.bngl", "patterns": [{ "include": "#line_labels" }] }
				},
				"end": "\\s*(?=\\#|\n)",
				"patterns": [{
					"name": "meta.moleculetype.definition.bngl",
					"patterns": [{
						"include": "#moltype"
					}]
				}]
			}]
		},
		"compartment_line": {
			"name": "meta.compartment.line.bngl",
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([A-Za-z][A-Za-z0-9_]*)\\s+([2|3])\\s+",
				"beginCaptures": {
					"1": { "name": "meta.compartment.linelabel.bngl", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "meta.compartment.name.bngl", "patterns": [{ "include": "#names"}] },
					"3": { "name": "meta.compartment.dimensionality.bngl", "patterns": [{ "include": "#constants"}] }
				},
				"end": "(\\s[A-Za-z][A-Za-z0-9_]*)?\\s*(?=\\#|\n)",
				"endCaptures": {
					"1": { "name": "meta.compartment.parent.bngl", "patterns": [{ "include": "#names" }]}
				},
				"patterns": [{
					"include": "#expressions"
				}]
			}]
		},
		"func_line": {
			"name": "meta.function.line.bngl",
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([A-Za-z][A-Za-z0-9_]*)(\\([^\n|\\#|\\)]*\\))?\\s*(\\s+|\\=)\\s*",
				"beginCaptures": {
					"1": { "name": "meta.function.linelabel.bngl", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "meta.function.name.bngl", "patterns": [{ "include": "#names"}] },
					"3": { "name": "meta.function.arguments.bngl", "patterns": [{ "include": "#func_args"}]},
					"4": { "name": "meta.function.define_sym.bngl", "patterns": [{ "include": "#constants"}] }
				},
				"end": "(?=\\#|\n)",
				"patterns": [{
					"include": "#expressions"
				}]
			}]
		},
		"func_args": {
			"patterns": [{
				"match": "([^\n|\\#|\\,|\\(|\\)|\\s]+)",
				"captures": {
					"1": { "name": "variable.language.function.argument.bngl", "patterns": [{ "include": "#names"}] }
				}
			},
			{
				"match": "\\,",
				"name": "keyword.operator.function.bngl"
			}]
		},
		"species_line": {
			"name": "meta.species.line.bngl",
			"patterns": [
			{
				"match": "\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([^\n|\\#]+)\\s+([^\n|\\#]+)",
				"captures": {
					"1": { "name": "meta.species.linelabel.bngl", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "meta.species.pattern.bngl", "patterns": [{ "include": "#species_pat" }] },
					"3": { "name": "meta.species.amount.bngl", "patterns": [{ "include": "#expressions"}] }
				}
			},
			{
				"include": "#comments"
			}]
		},
		"obs_def": {
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*(Molecules|Species)\\s+([A-Za-z][A-Za-z0-9_]*)\\s+",
				"beginCaptures": {
					"1": { "name": "meta.observable.linelabel.bngl", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "meta.observable.type.bngl", "patterns": [{ "include": "#obs_kwords"}] },
					"3": { "name": "meta.observable.name.bngl", "patterns": [{ "include": "#names"}] }
				},
				"end": "\\s*(?=\\#|\n)",
				"patterns": [{
					"begin": "([^\\#|\n]+)",
					"beginCaptures": {
						"1": { "name": "meta.observable.pattern", "patterns": [{ "include": "#species_pat" }] }
					},
					"end": "(?=\\#|\n)"
				}]
			}]
		},
		"species_pat": {
			"patterns": [{
				"match": "(\\@[A-Za-z][A-Za-z0-9_]*)?(\\%[A-Za-z0-9][A-Za-z0-9_]*)?(\\@[A-Za-z][A-Za-z0-9_]*)?(\\:|\\:\\:)?(\\$|\\{matchOnce\\})?([^\n|\\#|\\:|\\$|\\<|\\>|\\=]+)((\\<|\\<\\=|\\=\\=|\\=\\>|\\>)[0-9]+)?",
				"captures": {
					"1": { "name": "keyword.control.species.compartment.bngl" },
					"2": { "name": "keyword.other.species.tag.bngl" },
					"3": { "name": "keyword.control.species.compartment.bngl" },
					"4": { "name": "keyword.operator.species.total.bngl"},
					"5": { "name": "constant.numeric.species.mod.bngl" },
					"6": { "name": "meta.species", "patterns": [{ "include": "#species" }]},
					"7": { "name": "constant.numeric.species.quantifier.bngl" }
				}
			}]
		},
		"species": {
			"patterns": [{
				"match": "([^\n|\\#|\\.]+)",
				"captures": {
					"1": { "name": "meta.molecule", "patterns": [{ "include": "#molecule_pat"}] }
				}
			},
			{
				"match": "\\.",
				"name": "keyword.control.species.separator.bngl"
			}]
		},
		"molecule_pat": {
			"name": "molecule",
			"patterns": [{
				"match": "([A-Za-z][A-Za-z0-9_]*)?(\\()?([^\n|\\#|\\.|\\@|\\(|\\)]+)?(\\))?(\\%[A-Za-z0-9][A-Za-z0-9_]*)?(\\@[A-Za-z][A-Za-z0-9_]*)?",
				"captures": {
					"1": { "name": "meta.molecule.name.bngl", "patterns": [{ "include": "#names" }] },
					"3": { "name": "meta.molecule.components.bngl", "patterns": [{ "include": "#components" }] },
					"5": { "name": "meta.molecule.tag.bngl", "patterns": [{ "include": "#tag" }] },
					"6": { "name": "meta.molecule.compartment.bngl", "patterns": [{ "include": "#compartment" }] }
				}
			},
			{
				"match": "([A-Za-z][A-Za-z0-9_]*)?(\\%[A-Za-z0-9][A-Za-z0-9_]*)?(\\@[A-Za-z][A-Za-z0-9_]*)?(\\()?([^\n|\\#|\\.|\\@|\\)(|\\)]+)?(\\))?",
				"captures": {
					"1": { "name": "meta.molecule.name.bngl", "patterns": [{ "include": "#names"}] },
					"2": { "name": "meta.molecule.tag.bngl", "patterns": [{ "include": "#tag"}] },
					"3": { "name": "meta.molecule.compartment.bngl", "patterns": [{ "include": "compartment"}] },
					"5": { "name": "meta.molecule.components.bngl", "patterns": [{ "include": "#components" }] }
				}
			}
			]
		},
		"components": {
			"patterns": [{
				"match": "([^\n|\\#|\\,|\\(|\\)|\\s]+)",
				"captures": {
					"1": { "name": "meta.component.bngl", "patterns": [{ "include": "#component" }] }
				}
			},
			{
				"match": "\\,",
				"name": "keyword.control.component.separator.bngl"
			}
			]
		},
		"component": {
			"patterns": [{
				"match": "([A-Za-z][A-Za-z0-9_]*)?(\\~\\?|\\~[A-Za-z0-9][A-Za-z0-9_]*)?(\\!\\?|\\!\\+|\\![0-9]+)?(\\%[A-Za-z0-9][A-Za-z0-9_]*)?",
				"captures": {
					"1": { "name": "meta.component.name.bngl", "patterns": [{ "include": "#names" }] },
					"2": { "name": "meta.component.state.bngl", "patterns": [{ "include": "#state" }] },
					"3": { "name": "meta.component.bond.bngl", "patterns": [{ "include": "#bond" }] },
					"4": { "name": "meta.component.tag.bngl", "patterns": [{ "include": "#tag" }] }
				}
			}]
		},
		"moltype": {
			"patterns": [{
				"begin": "([A-Za-z][A-Za-z0-9_]*)\\(",
				"beginCaptures": {
					"1": { "name": "meta.moleculetype.name.bngl", "patterns": [{ "include": "#names" }] }
				},
				"end": "(.*)\\)",
				"endCaptures": {
					"1": { "name": "meta.moleculetype.specification.bngl", "patterns": [{ "include": "#component_type" }] }
				}
			}]
		},
		"component_type": {
			"patterns": [
			{
				"match": "([^\n|\\#|\\,|\\s]+)",
				"captures": {
					"1": { "name": "meta.component_type.component.bngl", "patterns": [{ "include": "#component" }] }
				}
			},
			{
				"name": "keyword.operator.mtype.bngl",
				"match": "\\,"
			}]
		},
		"rule_line": {
			"name": "meta.rule.line.bngl",
			"patterns": [{
				"begin": "^\\s*([0-9]+\\s+|[A-Za-z][A-Za-z0-9_]*\\:)?\\s*([^\n|\\#|\\<|\\-|\\>]*)\\s*(?=\\<\\-\\>|\\-\\>)\\s*",
				"beginCaptures": {
					"1": { "name": "meta.rule.linelabel.bngl", "patterns": [{ "include": "#line_labels" }] },
					"2": { "name": "meta.rule.reactants.bngl", "patterns": [{ "include": "#reactants"}] }
				},
				"end": "(?=\\#|\n)",
				"patterns": [{
					"include": "#reaction_rhs"
				}]
			}]
		},
		"reactants": {
			"patterns": [{
				"match": "(([^\n|\\#|\\+]|(?<=\\!)\\+)+)",
				"captures": {
					"1": { "name": "meta.rule.reactant.bngl", "patterns": [{ "include": "#species_pat"}] }
				}
			},
			{
				"match": "(?<!\\!)\\+",
				"name": "keyword.control.rule.plus.bngl"
			}]
		},
		"reaction_rhs": {
			"patterns": [{
				"match": "(\\<\\-\\>)([^\n|\\#]+)\\s+([^\n|\\#]+\\,[^\n|\\#]+)",
				"captures": {
					"1": { "name": "keyword.control.rule.bidir.bngl" },
					"2": { "name": "meta.rule.bidir_prod.bngl", "patterns": [{ "include": "#products"}] },
					"3": { "name": "meta.rule.bidir_rate.bngl", "patterns": [{ "include": "#bidir_rate"}] }
				}
			},
			{
				"match": "(\\-\\>)([^\n|\\#]+)\\s+([^\n|\\#]+)",
				"captures": {
					"1": { "name": "keyword.control.rule.unidir.bngl" },
					"2": { "name": "meta.rule.unidir_prod.bngl", "patterns": [{ "include": "#products"}] },
					"3": { "name": "meta.rule.unidir_rate.bngl", "patterns": [{ "include": "#expressions"}] }
				}
			}]
		},
		"products": {
			"patterns": [{
				"match": "([^\n|\\#|\\+]+)",
				"captures": {
					"1": { "name": "meta.rule.product.bngl", "patterns": [{ "include": "#species_pat"}] }
				}
			},
			{
				"match": "\\+",
				"name": "keyword.control.rule.plus.bngl"
			}]
		},
		"bidir_rate": {
			"patterns": [{
				"match": "([^\n|\\#|\\,]+)",
				"captures": {
					"1": { "name": "meta.rule.rate.bngl", "patterns": [{ "include": "#expressions"}] }
				}
			},
			{
				"match": "\\,",
				"name": "keyword.control.rule.rate_sep.bngl" 
			}]
		},
		"obs_kwords": {
			"patterns": [{
				"name": "variable.language.observable.type.bngl",
				"match": "(Molecules|Species)"
			}]
		},
		"names": {
			"name": "variable.name.bngl",
			"match": "[A-Za-z][A-Za-z0-9_]*"
		},
		"state": {
			"patterns": [{
				"match": "\\~",
				"name": "constant.language.state.symbol.bngl"
			},
		    {
				"match": "[^\\~]+",
				"name": "variable.parameter.state.name.bngl"
			}]
		},
		"bond": {
			"patterns": [{
				"match": "\\!",
				"name": "constant.language.bond.symbol.bngl"
			},
		    {
				"match": "[^\\!]+",
				"name": "variable.parameter.bond.name.bngl"
			}]
		},
		"tag": {
			"patterns": [{
				"match": "\\%",
				"name": "constant.language.tag.symbol.bngl"
			},
		    {
				"match": "[^\\%]+",
				"name": "variable.parameter.tag.name.bngl"
			}]
		},
		"compartment": {
			"patterns": [{
				"match": "\\@",
				"name": "constant.language.compartment.symbol.bngl"
			},
		    {
				"match": "[^\\@]+",
				"name": "variable.parameter.compartment.name.bngl"
			}]
		},
		"line_labels": {
			"name": "constant.language.line_label.bngl",
			"match": "([A-Za-z][A-Za-z0-9_]*\\s*\\:|[0-9]+\\s+)"
		},
		"expressions": {
			"patterns": [
			{
				"include": "#constants"
			},
			{
				"include": "#functions"
			},
			{
				"include": "#names"
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.bngl",
				"begin": "\"",
				"end": "\""
			}]
		},
		"functions": {
			"patterns": [{
				"name": "keyword.control.bngl",
				"match": "\\b(abs|sin|cos|tan|exp|ln|log10|floor|ceil|sqrt|asin|acos|atan|sinh|cosh|tanh|asinh|acosh|atanh)\\b"
			}]
		},
		"constants": {
			"patterns": [
			{
				"name": "constant.numeric.floating.bngl",
				"match": "(?:\\b|\\+|\\-|\\*|\\/|\\%)\\d+(\\.\\d+)?(e\\d+)?"
			},
			{
				"name": "constant.character.bngl",
				"match": "(<|>|=|!|=>|<=)"
			},
			{
				"name": "keyword.operator.bngl",
				"match": "(\\+|\\-|\\*|\\/|\\%)"
			},
			{
				"name": "keyword.control.bngl",
				"match": "\\b(if|min|max|sum|avg)\\b"
			},
			{
				"name": "keyword.control.bngl",
				"match": "\\b(pi|eulerian|time)\\b"
			}
			]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.bngl",
				"match": "#.*"
			}]
		}
	},
	"scopeName": "source.bngl"
}