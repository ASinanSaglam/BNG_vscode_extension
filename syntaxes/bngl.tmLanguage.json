{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BioNetGen Language",
	"patterns": [
		{
			"include": "#model"
		},
		{
			"include": "#actions"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"model": {
			"patterns": [{
				"name": "entity.name.tag.model.bngl",
				"begin": "begin model",
				"end": "end model",
				"patterns": [{
					"include": "#blocks"
				}]
			}]
		},
		"blocks": {
			"patterns": [{
				"name": "entity.name.tag.params.bngl",
				"begin": "begin parameters",
				"end": "end parameters",
				"patterns": [
					{
						"include": "#comments"
					},
					{
						"include": "#param_def"
					}]
			},
			{
				"name": "entity.name.tag.comps.bngl",
				"begin": "begin compartments",
				"end": "end compartments",
				"patterns": [{
					"include": "#comments"
				}]
			},
			{
				"name": "entity.name.tag.mtypes.bngl",
				"begin": "begin molecule types",
				"end": "end molecule types",
				"patterns": [
				{
					"include": "#moltype_def"
				},
				{
					"include": "#comments"
				}]
			},
			{
				"name": "entity.name.tag.rules.bngl",
				"begin": "begin reaction rules",
				"end": "end reaction rules",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#expressions"
				},
				{
					"include": "#species_spec"
				}]
			},
			{
				"name": "entity.name.tag.funcs.bngl",
				"begin": "begin functions",
				"end": "end functions",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#func_def"
				}]
			},
			{
				"name": "entity.name.tag.specs.bngl",
				"begin": "begin species",
				"end": "end species",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#species_def"
				}]
			},
			{
				"name": "entity.name.tag.specs.bngl",
				"begin": "begin seed species",
				"end": "end seed species",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#species_def"
				}]
			},
			{
				"name": "entity.name.tag.obs.bngl",
				"begin": "begin observables",
				"end": "end observables",
				"patterns": [{
					"include": "#comments"
				},
				{
					"include": "#obs_def"
				}]
			}
			]
		},
		"actions": {
			"patterns": [{
				"name": "entity.name.function.bngl",
				"match": "(generate_network|generate_hybrid_model|simulate|simulate_ode|simulate_ssa|simulate_pla|simulate_nf|parameter_scan|bifurcate|readFile|writeFile|writeModel|writeNetwork|writeXML|writeSBML|writeMfile|writeMexfile|writeMDL|visualize|setConcentration|addConcentration|saveConcentration|resetConcentrations|setParameter|saveParameters|resetParameters|quit|setModelName|substanceUnits|version|setOption)"
			},
			{
				"include": "#comments"
			},
		    {
				"include": "#constants"
			}]
		},
		"param_def": {
			"name": "variable.parameter.bngl",
			"patterns": [
				{
					"begin": "^\\s*",
					"end": "(?=\\s|\\=|\\#|\n)",
					"patterns": [{
						"include": "#names"
					}]
				},
				{
					"name": "variable.expression.bngl",
					"begin": "(?=\\S)",
					"end": "(?=\n|\\#)",
					"patterns": [{
						"include": "#expressions"
					}]
				}]
		},
		"moltype_def": {
			"patterns": [{
				"name": "entity.name.type.mtype.bngl",
				"begin": "^\\s*",
				"end": "(?=\\s|\\()",
				"patterns": [{
					"include": "#names"
				}]
			},
			{
				"name": "entity.name.type.mtype_spec.bngl",
				"begin": "\\(",
				"end": "\\)",
				"patterns": [{
					"include": "#moltype_spec"
				}]
			}]
		},
		"func_def": {
			"patterns": [
				{
					"name": "entity.name.tag.funcs.name.bngl",
					"begin": "^\\s*",
					"end": "(?=\\()",
					"patterns": [{
						"include": "#names"
					}]
				},
				{
					"name": "entity.name.tag.funcs.args.bngl",
					"begin": "\\(",
					"end": "\\)"
				},
				{
					"name": "entity.name.tag.funcs.defn.bngl",
					"begin": "(?=\\S)",
					"end": "(?=\n|\\#)",
					"patterns": [{
						"include": "#expressions"
					}]
				}]
			
		},
		"species_def": {
			"patterns": [{
				"name": "entity.name.type.spec.name.bngl",
				"begin": "(^\\s*)", 
				"end": "(?=\\s|\\()",
				"patterns": [{
					"include": "#names"
				}]
			},
			{
				"name": "entity.name.type.spec.bngl",
				"begin": "\\(",
				"end": "\\)\\s",
				"patterns": [{
					"include": "#species_spec"
				}]
			},
			{
				"name": "variable.expression.bngl",
				"begin": "(?=\\S)",
				"end": "(?=\n|\\#)",
				"patterns": [{
					"include": "#expressions"
				}]
				
			},
			{
				"include": "#comments"
			}]
		},
		"moltype_spec": {
			"patterns": [{
				"name": "keyword.control.state.bngl",
				"match": "(~|!)"
			},
			{
				"name": "keyword.operator.mtype.bngl",
				"match": "(,)"
			},
			{
				"include": "#constants"
			}]
		},
		"species_spec": {
			"patterns": [{
				"name": "keyword.control.state.bngl",
				"match": "(~|!)"
			},
			{
				"name": "keyword.operator.mtype.bngl",
				"match": "(,|\\.|\\(|\\))"
			},
			{
				"include": "#constants"
			}]
		},
		"obs_def": {
			"patterns": [
			{
				"name": "entity.name.tag.obs.type.bngl",
				"begin": "^\\s*",
				"end": "(?=\\s|\\#)",
				"patterns": [{
					"include": "#obs_kwords"
				}]
			},
			{
				"name": "entity.name.tag.obs.name.bngl",
				"begin": "(?=\\S)",
				"end": "(?=\\s|\\#)",
				"patterns": [{
					"include": "#names"
				}]
			},
			{
				"name": "entity.name.tag.obs.pat.bngl",
				"begin": "(?=\\S)",
				"end": "(?=\n|\\#)",
				"patterns": [{
					"include": "#species_spec"
				}]
			}]
		},
		"obs_kwords": {
			"patterns": [{
				"name": "entity.name.type.obs.bngl",
				"match": "(Molecules|Species)"
			}]
		},
		"names": {
			"name": "variable.name.bngl",
			"match": "[A-Za-z][A-Za-z0-9_]*"
		},
		"expressions": {
			"patterns": [{
				"include": "#constants"
			},
			{
				"include": "#functions"
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.bngl",
				"begin": "\"",
				"end": "\""
			}]
		},
		"functions": {
			"patterns": [{
				"name": "keyword.control.bngl",
				"match": "\\b(abs|sin|cos|tan|exp|ln|log10|floor|ceil|sqrt|asin|acos|atan|sinh|cosh|tanh|asinh|acosh|atanh)\\b"
			}]
		},
		"constants": {
			"patterns": [
			{
				"name": "constant.numeric.bngl",
				"match": "(?:\\b|\\+|\\-|\\*|\\/|\\%)\\d+(\\.\\d+)?(e\\d+)?"
			},
			{
				"name": "constant.character.bngl",
				"match": "(<|>|=|!|=>|<=)"
			},
			{
				"name": "keyword.operator.bngl",
				"match": "(\\+|\\-|\\*|\\/|\\%)"
			},
			{
				"name": "keyword.control.bngl",
				"match": "\\b(if|min|max|sum|avg)\\b"
			},
			{
				"name": "keyword.control.bngl",
				"match": "\\b(pi|eulerian|time)\\b"
			}
			]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.bngl",
				"match": "#.*"
			}]
		}
	},
	"scopeName": "source.bngl"
}